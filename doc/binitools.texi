\input texinfo    @c -*-texinfo-*-
@c %**start of header
@setfilename binitools.info
@include version.texi
@settitle The binitools and BINI Format Guide
@c %**end of header

@copying
This manual for for binitools, version @value{VERSION}, as well as
information about the BINI format.

Copyright @copyright{} 2007 Christopher Wellons
<@email{ccw129@@psu.edu}>.

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with no
Invariant Sections, with the Front-Cover Texts being ``A GNU Manual,''
and with the Back-Cover Texts as in (a) below.  A copy of the
license is included in the section entitled ``GNU Free Documentation
License.''

(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
this GNU Manual, like GNU software.  Copies published by the Free
Software Foundation raise funds for GNU development.''
@end quotation
@end copying

@titlepage
@title The binitools and BINI Format Guide
@subtitle for binitools version @value{VERSION}, @value{UPDATED}
@author Christopher Wellons (@email{ccw129@@psu.edu})

@page
@vskip 0pt plus 1filll
@insertcopying

@end titlepage

@contents

@ifnottex
@node Top
@top binitools

@insertcopying
@end ifnottex

@menu
* Preface::          An introduction
* Using unbini::     Unpacking BINI files.
* Using bini::       Repcking BINI files.
* Tips and Tricks::  Useful binitools tricks.
* The BINI Format::  Detailed information on the BINI format.
* Index::            Complete index.
@end menu

@c Preface
@node Preface
@chapter Preface
@cindex preface

Both tools have been tested with every BINI file that comes with
Freelancer and are able to freely convert back and forth with no data
loss or damage. These tools are meant to be used in conjunction with
one another. Do not mix these tools with any other BINI tools as they
will not work. These BINI tools are the only known tools that can
convert back and forth from text format without error.

@c The unbini usage chapter.
@node Using unbini
@chapter Using unbini
@cindex unbini

@menu
* Basic Operation::   Basic usage of unbini.
* Output Format::     The unbini output format.
* Special Output::    Producing compatible output.
* BINI Analysis::     Options for inspecting BINI files.
* Quick Help::        Extra help information.
@end menu

@node Basic Operation
@section Basic Operation

@cindex unpack
@cindex text editor
@cindex editor, text
The BINI file format stores data in a format that can more easily be
read by a computer. To edit a BINI file, it must first be
@dfn{unpacked} into a text file to be edited by a text editor. The
@command{unbini} tool can unpack the BINI file for this purpose.

@cindex concatenate
@cindex arguments
@command{unbini} accepts any number of files as arguments. Each file
is processed separately and converted into its own output file. This
behavior changes with the @option{-c} flag. All input files are
concatenated into a single output file, which must be specified with
the @option{-o} option.

@cindex drop, and drag
@cindex drag and drop
@cindex Windows
If you are on the Windows platform, you can easily convert many files
with drag-and-drop.  by selecting all the files you want to
convert. You can achieve this effect in Windows by dragging and
dropping any files you want converted onto the executable files.

@cindex output
The output file is determined by appending @file{.txt} to the input
file. 

For example,

@example
  unbini market_commodities.ini effects_explosion.ini
@end example

The unpacked output files will be @file{market_commodities.ini.txt}
and @file{effects_explosion.ini.txt}.

@cindex stdin
@cindex stdout
@cindex standard in
@cindex standard out
@cindex pipes
If an input file is supplied to with the name @file{-},
@command{unbini} will use standard input (@file{stdin}). If @file{-}
is supplied as an input file and no output file is specified (with the
@option{-o} option), or of @file{-} is specified as the output file,
ubini will use standard output @file{stdout} for producing output.

@node Output Format
@section Output Format

The text output from @command{unbini} version looks like this,

@example
["Section Title"]
"entry name" = 1, -1, 1.0, -1.0, "a string"
"empty entry"
"third entry" = "C:\\freelancer\\freelancer.exe"

["An Empty Section"]
@end example

@cindex quotes
@cindex quoted values
@cindex backslash
@cindex escaped characters
Every string value, including section and entry names, must be
contained in quotes. Quotes and backslashes inside the quotes must be
escaped with a backslash.

@example
"A \"quoted\" word and a backslash: \\."
@end example

will be interpreted as,

@example
A "quoted" word and a backslash \.
@end example

All other characters, including a new line character, are legal inside
the quotes.

Why all these quotes? This gaurantees that the BINI file and the text
file are equally expressive and that there is a one-to-one mapping of
any possible BINI file to a unique text version.

@cindex whitespace
All non-quoted whitespace is ignored, so you can freely add space and
empty lines and such as much as you want. This makes the text version
of a BINI file very flexible.

@cindex number
@cindex integer
@cindex float
@cindex double
@cindex value
There are two types of numbers: integers and floating points. Integers
are signed and have no decimal component. Floating points are any
signed number with a decimal. 

@cindex comments
You can also comment your text file with a # character. Comments are
not encoded into the BINI file in any way. This means unpacking your
own BINI files will not recover any comments.

For example,

@example
["Section"]  # This is a comment
"entry" = 10 # This is another comment

# a comment for a group of entries:
"entry1"
"entry2" = "some value" 
@end example

@node Special Output
@section Special Output

@cindex compatibility
In order to operate with other tools who want to read plain text
files, unbini has a @option{-w} option which will produce output that
other programs will recognize. However, this file will not be readable
by @command{bini}, which repacks the text file into the BINI format.
This is because this output file is ambiguous (it can represent many
possible, different BINI files). @emph{Do not} edit files produced
with the @option{-w} option and expect to repack the file with these
tools.

@node BINI Analysis
@section BINI Analysis
@cindex analysis

There are two options for analysing a BINI file using
@command{unbini}. The first is the summary option, @option{-s}. After
all processing is complete, a summary of the number of sections,
entries, and values.

Here is the summary of @file{simple.ini}, which is included in the
source distribution.
@example
Sections : 4
Entries  : 13
Values   : 20
  int    : 6
  float  : 2
  string : 12
@end example

The second option is a listing of the string table, @option{-t}. The
elements are printed at one per line in the same order they are stored
in the BINI file.

Here is the string table for @file{simple.ini},
@example
Sec tion
numbers
Spaced Entry
space->    <-space
more->   <-space
break
==================
empty

Abc
[hard=section]
expression
0* + 1
:
colon_entry
121234
number_entry
equals_val
= assignment
filename
C:\freelancer\freelancer.exe
backslash
This is a backslash: \
empty section
lastsection
empty entry
entry
-value
-----------------
@end example

@node Quick Help
@section Quick Help

@cindex help
@cindex extra documentation
To view all of the options presented here, you can use the @option{-h}
option. It produces the following output:

@example
Usage: ../unbini [options] FILES

Options:

        -o file      Set output file
        -t           Print string table
        -s           Summarize file details
        -n           Do not output a file
        -v           Verbose mode
        -w           Standard INI output (no string quotes)
        -c           Concatenate input files (requires -o option)
        -q           Don't print message at startup
        -h           Print this usage text
@end example

The @command{man} page contains slightly more detailed information
than the @option{-h} option produces.

@c The bini usage chapter.
@node Using bini
@chapter Using bini
@cindex bini

When repacking the files with bini (bini.exe), the .txt extention is
removed. If an original file already exists, it is backed up (see
BACKUP below). If no .txt extension is on the file, .ini is added
instead.


When bini converts a text file back into a BINI file, it will check to
see if the BINI file already exists. If so, it will back it up (adding
a .bak extension), with one exception. If the backup already exists,
no backup is made. This way, the tools will automatically back up your
original Freelancer files and never overwrite those backups. You can
restore the original file at anytime by removing the .bak extension.

@c Tips and Tricks
@node Tips and Tricks
@chapter Tips and Tricks
@cindex tricks
@cindex tips

@c The BINI Format
@node The BINI Format
@chapter The BINI Format
@cindex format

@c End the manual with the index.
@node Index
@unnumbered Index

@printindex cp   

@bye
